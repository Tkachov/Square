=== класс GAME

== Общая информация

Класс Game выполняет бесконечный цикл, обрабатывающий ввод от пользователя и перерисовывающий экран.
Он загружает и хранит разную информацию, такую как объекты класса Screen, объекты String_Table с настройками и локализацией, и т.д.
Он содержит единственные экземпляры объектов класса Input и Loader, которыми вы можете пользоваться из других классов.
В общем-то, вам не нужно изменять работу объекта Game, но эта информация всё равно может оказаться для вас полезной.

== Функции

 Game()
  Конструктор, создаёт окно и открывает Screen, которому соответствует ScreenID SCREENID_DEFAULT.

 ~Game()
  Деструктор, очищает память.

 void loop()
  Содержит цикл, который заставляет приложение работать.

 void stop()
  Останавливает цикл приложения (и, следовательно, само приложение).

 void open_screen(ScreenID sid, bool reload = false)
  Открывает Screen, которому соответствует переданный ScreenID %sid%.
  Перезагружает Screen (то есть создаёт новый экземпляр объекта), если параметр %reload% равен true.

 void open_screen(Screen* screen)
  Открывает переданный Screen %screen%.

 void save(string filename)
  Сохраняет текущее состояние игры в файле с переданным именем %filename% в подпапке "saves".
 (Например, если %filename% равно "game.sav", то будет создан или перезаписан файл "saves\game.sav".)

 void load(string filename)
  Загружает состояние игры из файла с переданным именем %filename% из подпапки "saves".

 void save_options()
  Сохраняет настройки в файле "config.txt".

 void restart()
  Перезапускает игру.
  Может использоваться, чтобы применить изменения настроек (если они критичны и требуют перезапуска).

 int w()
  Возвращает ширину окна.
  
 int h()
  Возвращает высоту окна.

 State* state()
  Возвращает указатель на объект State текущей игры (его можно сохранить или получить из него значения переменных).

 ScreenID sid()
  Возвращает ScreenID, соответствующий объекту Screen, открытому в данный момент.

 string option(string key)
  Возвращает значение настройки с переданным именем %key%.

 void set_option(string key, string value)
  Заменяет значение настройки с переданным именем %key% на переданное значение %value%.

== Прочее

В файле game.h объявлено перечисление ScreenID и константа SCREENID_DEFAULT.
Объект Game содержит единственные экземпляры SDL_Surface окна, и объектов Loader, Input и State (указатели на них передаются в объекты класса Screen). Он также содержит настройки в объекте класса String_Table и указатель на открытый в данный момент объект Screen.